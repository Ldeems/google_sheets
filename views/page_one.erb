<html>
  <head></head>
  <body>

<div id="showinfo">
</div>

    <!--
    BEFORE RUNNING:
    ---------------
    1. If not already done, enable the Google Sheets API
       and check the quota for your project at
       https://console.developers.google.com/apis/api/sheets
    2. Get access keys for your application. See
       https://developers.google.com/api-client-library/javascript/start/start-js#get-access-keys-for-your-application
    3. For additional information on authentication, see
       https://developers.google.com/sheets/api/quickstart/js#step_2_set_up_the_sample
    -->
    <script>
    var theData = "hello world ";
    function makeApiCall() {
      var params = {
        // The spreadsheet to request.
        spreadsheetId: '1-CBxmSkXKNHhAPXeowTSktFOtWThZlb_03yYvTUQr8Y',  // TODO: Update placeholder value.

        // The ranges to retrieve from the spreadsheet.
        ranges: [],  // TODO: Update placeholder value.

        // True if grid data should be returned.
        // This parameter is ignored if a field mask was set in the request.
        includeGridData: true,  // TODO: Update placeholder value.
      };
      //console.log("params", params)
      //console.log("the....dt", theData)
      var request = gapi.client.sheets.spreadsheets.get(params);
      request.then(function(response) {
        // TODO: Change code below to process the `response` object:
        console.log(response.result);
        //var json = response.result
        //innerJson = json.sheets[0].data[0].rowData
        //console.log("data", theData)
        //var theData = innerJson
       // console.log("thenewset", innerJson)
       // return innerJson
      }, function(reason) {
       // console.error('error: ' + reason.result.error.message);
      });
      //console.log("the request", request)
      return request 
    }
    //console.log("innerjsonoutsidefunc", innerJson)
 
    function initClient() {
      var API_KEY = 'AIzaSyC-V7jbbXUhd3Jbna0bqy5SpKq8pMuYr10';  // TODO: Update placeholder with desired API key.

      var CLIENT_ID = '755741855479-3g6hein18p9q7b80rjheqovbge5n711d.apps.googleusercontent.com';  // TODO: Update placeholder with desired client ID.

      // TODO: Authorize using one of the following scopes:
      //   'https://www.googleapis.com/auth/drive'
      //   'https://www.googleapis.com/auth/drive.file'
      //   'https://www.googleapis.com/auth/drive.readonly'
      //   'https://www.googleapis.com/auth/spreadsheets'
      //   'https://www.googleapis.com/auth/spreadsheets.readonly'
      var SCOPE = 'https://www.googleapis.com/auth/spreadsheets';

      gapi.client.init({
        'apiKey': API_KEY,
        'clientId': CLIENT_ID,
        'scope': SCOPE,
        'discoveryDocs': ['https://sheets.googleapis.com/$discovery/rest?version=v4'],
      }).then(function() {
        gapi.auth2.getAuthInstance().isSignedIn.listen(updateSignInStatus);
        updateSignInStatus(gapi.auth2.getAuthInstance().isSignedIn.get());
      });
    }
    

    function handleClientLoad() {
      gapi.load('client:auth2', initClient);
    }

    function updateSignInStatus(isSignedIn) {
      if (isSignedIn) {
      val = makeApiCall()
         console.log("this is val", val)
        var trying = val.Zq.rW;
         console.log("trying", trying)
      }
    }

    function handleSignInClick(event) {
      gapi.auth2.getAuthInstance().signIn();
    }

    function handleSignOutClick(event) {
      gapi.auth2.getAuthInstance().signOut();
    }

    //console.log("request", json)
    </script>
    <script async defer src="https://apis.google.com/js/api.js"
      onload="this.onload=function(){};handleClientLoad()"
      onreadystatechange="if (this.readyState === 'complete') this.onload()">
    </script>
    <button id="signin-button" onclick="handleSignInClick()">Sign in</button>
    <button id="signout-button" onclick="handleSignOutClick()">Sign out</button>
  </body>
</html>